definitions:
  comic.Author:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      type:
        type: string
    type: object
  comic.Episode:
    properties:
      description:
        type: string
      files:
        items:
          $ref: '#/definitions/comic.EpisodeFile'
        type: array
      imageAddress:
        type: string
      title:
        type: string
    type: object
  comic.EpisodeFile:
    properties:
      description:
        type: string
      imageAddress:
        type: string
      title:
        type: string
    type: object
  comic.Info:
    properties:
      authors:
        items:
          $ref: '#/definitions/comic.Author'
        type: array
      bannerFileAddress:
        type: string
      categories:
        items:
          type: string
        type: array
      description:
        type: string
      endDate:
        type: string
      episodes:
        items:
          $ref: '#/definitions/comic.Episode'
        type: array
      imageFileAddress:
        type: string
      publishDate:
        type: string
      publisher:
        type: string
      status:
        type: integer
      thumbnailFileAddress:
        type: string
      title:
        type: string
    type: object
  enum.LogStatus:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - Unknown
    - Queued
    - Pending
    - Succeed
    - Failed
  manager.LogMock:
    properties:
      ID:
        type: integer
      console:
        items:
          type: string
        type: array
      hasInfo:
        type: boolean
      output:
        $ref: '#/definitions/comic.Info'
      processedEpisodes:
        type: integer
      processedFiles:
        type: integer
      status:
        $ref: '#/definitions/enum.LogStatus'
      timeEstimated:
        type: integer
      totalEpisodes:
        type: integer
      totalFiles:
        type: integer
    type: object
  manager.PageScrapRequest:
    properties:
      authorization:
        type: string
      pages:
        items:
          type: string
        type: array
      webhookUrl:
        type: string
    type: object
  manager.PerPageResponse:
    properties:
      logId:
        type: integer
    type: object
  manager.SendWebhookRequest:
    properties:
      authorization:
        type: string
      logIds:
        items:
          type: integer
        type: array
      webhookUrl:
        type: string
    type: object
info:
  contact: {}
  title: Comic Scrapper
  version: "1.0"
paths:
  /api/v1/logger/{logID}:
    get:
      consumes:
      - application/json
      description: Get Request Result By LogID
      parameters:
      - description: logID
        in: path
        name: logID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/manager.LogMock'
      summary: Get Request Result
      tags:
      - Log
  /api/v1/scrapper/request:
    post:
      consumes:
      - application/json
      description: Request Scrapper to begin the process
      parameters:
      - description: Fields
        in: body
        name: fields
        required: true
        schema:
          $ref: '#/definitions/manager.PageScrapRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/manager.PerPageResponse'
            type: array
      summary: Request Scrapper
      tags:
      - Service
  /api/v1/scrapper/sendWebhook:
    post:
      consumes:
      - application/json
      description: Send Webhook by LogID
      parameters:
      - description: Fields
        in: body
        name: fields
        required: true
        schema:
          $ref: '#/definitions/manager.SendWebhookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/manager.PerPageResponse'
            type: array
      summary: Send Webhook
      tags:
      - Service
securityDefinitions:
  BearerAuth:
    description: Bearer [...]
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
